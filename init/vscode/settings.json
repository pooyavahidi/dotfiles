{
  //// workbench
  "workbench.activityBar.location": "top",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.colorTheme": "One Monokai",
  "workbench.layoutControl.enabled": false,
  "workbench.panel.defaultLocation": "right",
  "workbench.editor.centeredLayoutAutoResize": false,
  "workbench.editor.centeredLayoutFixedWidth": true,
  "workbench.editor.closeOnFileDelete": true,
  "workbench.sideBar.location": "left",
  "workbench.statusBar.visible": true,
  "workbench.startupEditor": "none",
  //// window
  "window.zoomLevel": 3.25,
  "window.menuBarVisibility": "toggle",
  "window.titleBarStyle": "custom",
  "window.commandCenter": false,
  "window.density.editorTabHeight": "compact",
  "window.newWindowDimensions": "inherit",
  //// editor
  "editor.renderWhitespace": "none",
  "editor.minimap.enabled": false,
  "editor.rulers": [
    80
  ],
  "editor.cursorBlinking": "solid",
  "editor.fontSize": 13,
  "editor.tabSize": 4,
  "editor.mouseWheelZoom": false,
  // Use spaces per tab
  "editor.insertSpaces": true,
  "editor.detectIndentation": false,
  // Changing the default "Menlo, Monaco, â€˜Courier New', monospace"
  "editor.fontFamily": "Monaco, Cascadia Mono, Consolas, Ubuntu Mono, monospace",
  // Controls Sf suggestions should be accepted on 'Enter'. Use 'tab' instead.
  "editor.acceptSuggestionOnEnter": "off",
  "editor.formatOnSave": true,
  "editor.multiDocumentOccurrencesHighlight": true,
  "editor.occurrencesHighlight": "multiFile",
  //// explorer
  "explorer.openEditors.visible": 0,
  //// debug
  "debug.onTaskErrors": "showErrors",
  //// terminal
  "terminal.integrated.fontSize": 12,
  "terminal.integrated.tabs.enabled": false,
  "terminal.integrated.stickyScroll.enabled": true,
  //// vscodevim extension settings
  "vim.useSystemClipboard": false,
  "vim.insertModeKeyBindingsNonRecursive": [
    {
      "before": [
        "j",
        "j"
      ],
      "after": [
        "<Esc>"
      ]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": [
        "p"
      ],
      "after": [
        "P"
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "j"
      ],
      "after": [
        "g",
        "j"
      ]
    },
    {
      "before": [
        "k"
      ],
      "after": [
        "g",
        "k"
      ]
    },
    {
      "before": [
        "0"
      ],
      "after": [
        "g",
        "0"
      ]
    },
    {
      "before": [
        "$"
      ],
      "after": [
        "g",
        "$"
      ]
    },
    {
      "before": [
        "p"
      ],
      "after": [
        "P"
      ]
    },
    {
      "before": [
        "u"
      ],
      "after": [],
      "commands": [
        "undo"
      ]
    },
    {
      "before": [
        "C-r"
      ],
      "after": [],
      "commands": [
        "redo"
      ]
    },
    {
      "before": [
        "U"
      ],
      "after": [],
      "commands": [
        "redo"
      ]
    }
  ],
  //// markdown settings
  "[markdown]": {
    "editor.wordWrap": "on",
    "editor.quickSuggestions": {
      "other": true,
      "comments": false,
      "strings": true
    }
  },
  //// python settings
  "[python]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "ms-python.black-formatter"
  },
  "black-formatter.args": [
    "--line-length",
    "79"
  ],
  //// docker settings
  "[dockerfile]": {
    "editor.formatOnSave": false
  },
  //// json
  "[json]": {
    "editor.tabSize": 2
  },
  //// json with comments
  "[jsonc]": {
    "editor.tabSize": 2
  },
  //// c/c++ settings
  "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: Google, IndentWidth: 4, ColumnLimit: 0}",
  //// notebook settings
  "notebook.formatOnSave.enabled": true,
  "notebook.output.scrolling": true,
  "notebook.output.wordWrap": true,
  "notebook.lineNumbers": "on",
  //// copilot settings
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": true,
    "scminput": false
  },
  //// files
  "files.eol": "\n",
  "files.insertFinalNewline": true,
  "files.trimTrailingWhitespace": true,
  "files.trimFinalNewlines": true,
  //// other settings
  "breadcrumbs.enabled": true,
  "git.openRepositoryInParentFolders": "always",
  "extensions.ignoreRecommendations": true,
  "diffEditor.ignoreTrimWhitespace": false,
}
