[
  // Keybindings for vscodevim extension
  {
    "key": "ctrl+shift+'",
    "command": "workbench.action.terminal.new"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new"
  },
  {
    "key": "ctrl+j r",
    "command": "workbench.files.action.focusFilesExplorer"
  },
  {
    "key": "ctrl+j shift+a",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+,",
    "command": "-workbench.action.openSettings"
  },
  {
    "key": "ctrl+j z",
    "command": "workbench.action.toggleZenMode"
  },
  {
    "key": "ctrl+k z",
    "command": "-workbench.action.toggleZenMode"
  },
  {
    "key": "ctrl+k ctrl+pagedown",
    "command": "-workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+j shift+q",
    "command": "workbench.action.closeAllEditors"
  },
  {
    "key": "ctrl+k ctrl+w",
    "command": "-workbench.action.closeAllEditors"
  },
  {
    "key": "ctrl+k ctrl+shift+w",
    "command": "-workbench.action.closeAllGroups"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "ctrl+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "ctrl+j t",
    "command": "workbench.action.tasks.reRunTask"
  },
  {
    "key": "ctrl+enter",
    "command": "workbench.action.debug.start",
    "when": "debuggersAvailable && debugState != 'initializing' && !notebookEditorFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "workbench.action.debug.continue",
    "when": "inDebugMode && !notebookEditorFocused"
  },
  {
    "key": "ctrl+shift+\\",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+j i",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+j shift+i",
    "command": "editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+/",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+j ;",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "meta+=",
    "command": "workbench.action.zoomIn"
  },
  {
    "key": "meta+-",
    "command": "workbench.action.zoomOut"
  },
  {
    "key": "ctrl+j ctrl+;",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+j l",
    "command": "workbench.action.focusRightGroup",
    "when": "multipleEditorGroups && !activeEditorGroupLast"
  },
  {
    "key": "ctrl+j h",
    "command": "workbench.action.focusLeftGroup",
    "when": "multipleEditorGroups && !panelFocus"
  },
  {
    "key": "ctrl+j s",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "ctrl+o",
    "command": "workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "ctrl+i",
    "command": "jupyter.runByLine",
    "when": "isWorkspaceTrusted && jupyter.ispythonnotebook && !notebookKernel && notebookCellType == 'code' || isWorkspaceTrusted && jupyter.ispythonnotebook && notebookCellType == 'code' && notebookKernel =~ /^ms-toolsai.jupyter\\// && resource not in 'jupyter.notebookeditor.debugDocuments'"
  },
  {
    "key": "ctrl+i",
    "command": "jupyter.runByLineNext",
    "when": "notebookCellResource in 'jupyter.notebookeditor.runByLineCells'"
  },
  {
    "key": "ctrl+7",
    "command": "-workbench.action.openEditorAtIndex7"
  },
  {
    "key": "ctrl+9",
    "command": "-workbench.action.openEditorAtIndex9"
  },
  {
    "key": "ctrl+cmd+9",
    "command": "-workbench.action.moveEditorToLastGroup"
  },
  {
    "key": "ctrl+o",
    "command": "extension.node-debug.startWithStopOnEntry",
    "when": "!inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'node' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-node'"
  },
  {
    "key": "ctrl+i",
    "command": "workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "ctrl+shift+o",
    "command": "workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "ctrl+j 2",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
  },
  {
    "key": "ctrl+shift+i",
    "command": "workbench.action.debug.stop",
    "when": "inDebugMode && !focusedSessionIsAttach"
  },
  {
    "key": "ctrl+8",
    "command": "-workbench.action.openEditorAtIndex8"
  },
  {
    "key": "ctrl+j w",
    "command": "editor.action.toggleWordWrap"
  },
  {
    "key": "ctrl+j u",
    "command": "testing.runAll"
  },
  {
    "key": "ctrl+j m",
    "command": "workbench.action.toggleMaximizeEditorGroup",
    "when": "maximizedEditorGroup || multipleEditorGroups"
  },
  {
    "key": "ctrl+j v",
    "command": "workbench.panel.chat.view.copilot.focus"
  },
  {
    "key": "ctrl+j e",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    "key": "ctrl+j shift+s",
    "command": "workbench.action.files.saveFiles"
  },
  {
    "key": "ctrl+j 0",
    "command": "workbench.action.joinAllGroups"
  },
  {
    "key": "ctrl+j 9",
    "command": "workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+j 8",
    "command": "workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+j shift+\\",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+0",
    "command": "-workbench.action.lastEditorInGroup"
  },
  {
    "key": "ctrl+9",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+8",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+j p",
    "command": "markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "shift+cmd+f",
    "command": "-workbench.action.findInFiles"
  },
  {
    "key": "shift+cmd+f",
    "command": "editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "shift+cmd+r",
    "command": "workbench.action.files.revert",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+j shift+x",
    "command": "workbench.action.closeWindow"
  },
  {
    "key": "ctrl+j o",
    "command": "outline.focus"
  },
  {
    "key": "ctrl+;",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+j g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+j g",
    "command": "workbench.scm.focus"
  },
  {
    "key": "ctrl+j m",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "panelFocus"
  },
  {
    "key": "ctrl+j q",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+l",
    "command": "search.action.focusSearchList",
    "when": "searchViewletFocus && hasSearchResult"
  },
  {
    "key": "ctrl+[",
    "command": "notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+[",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "-deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "shift+cmd+-",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "ctrl+j shift+-",
    "command": "workbench.action.splitEditor"
  },
  {
    "key": "ctrl+j shift+-",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.increaseViewWidth"
  },
  {
    "key": "ctrl+j \\",
    "command": "workbench.action.focusPanel"
  },
  {
    "key": "ctrl+shift+h",
    "command": "workbench.action.decreaseViewWidth"
  },
  {
    "key": "ctrl+j shift+t",
    "command": "workbench.action.createTerminalEditor"
  }
]
